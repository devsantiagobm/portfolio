{
    "technologies": {
        "title": "Tecnologías",
        "subtitle": "Lista de tecnologías que utilizo a diario como desarrollador",
        "elements": {
            "react": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Con React, puedo crear interfaces de usuario interactivas, dinámicas y reutilizables, ideales para aplicaciones modernas. Su flexibilidad permite integrarlo con otras bibliotecas o frameworks para adaptarse a distintos tipos de proyectos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "He utilizado React tanto en proyectos personales como profesionales. Entre los personales destacan una aplicación para críticas de películas y series, un prototipo de ecommerce de auriculares, una galería de arte y una app para gestionar links personales. Profesionalmente, lo he usado como freelancer en un proyecto cripto y en mi última empresa para mantener y mejorar aplicaciones internas, incluyendo una app para gestionar el ingreso de nuevas personas a la organización.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "React me permite desarrollar aplicaciones web rápidas, escalables y organizadas. Su ecosistema, la reutilización de componentes y su comunidad activa lo convierten en una herramienta esencial para el desarrollo frontend moderno, tanto en proyectos personales como corporativos.",
                "description": "ReactJS es una biblioteca de JavaScript desarrollada por Meta para construir interfaces de usuario basadas en componentes. Utiliza un enfoque de flujo de datos unidireccional y un DOM virtual que mejora el rendimiento al reducir las manipulaciones directas del DOM. Es ampliamente usada en el desarrollo frontend gracias a su eficiencia y modularidad."
            },
            "javascript": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "JavaScript es el lenguaje de programación que mejor domino y utilizo para crear sitios web interactivos, dinámicos y funcionales. Me permite controlar desde simples animaciones hasta la lógica compleja de aplicaciones completas.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Además de los proyectos construidos con React y NextJS, he utilizado JavaScript en un CRM de clientes, una landing page para una ficticia empresa de viajes espaciales, un reloj digital, y funcionalidades clave en varios proyectos personales y profesionales.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Uso JavaScript por su versatilidad. Es el lenguaje que conecta todos los aspectos de una aplicación web, y su ecosistema permite desarrollar para frontend, backend, móviles y más, con una gran comunidad y soporte.",
                "description": "JavaScript es un lenguaje de programación esencial en el desarrollo web. Permite agregar interactividad, dinamismo y lógica en sitios y aplicaciones. Desde formularios inteligentes hasta interacciones en tiempo real, es la base del comportamiento de una web moderna."
            },
            "nodejs": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Con Node.js puedo construir servidores eficientes y escalables utilizando JavaScript en el backend. Me permite manejar múltiples conexiones de forma simultánea gracias a su modelo asincrónico y basado en eventos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con Node.js he desarrollado APIs RESTful bien estructuradas, implementado autenticaciones seguras y creado funcionalidades en tiempo real con sockets. Algunos de los proyectos incluyen una app para generar links personales, una aplicación para planificación ágil tipo planning poker, y el backend de un sistema completo para una clínica de cosmetología.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Node.js me permite unificar el stack de desarrollo usando JavaScript tanto en frontend como backend. Es rápido, ligero y tiene una enorme comunidad con muchas bibliotecas útiles. Es ideal para construir aplicaciones modernas de forma eficiente.",
                "description": "Node.js es un entorno de ejecución para JavaScript del lado del servidor. Se basa en el motor V8 de Chrome y permite construir aplicaciones rápidas y escalables gracias a su modelo no bloqueante. Es una opción popular para crear APIs, servicios web y aplicaciones en tiempo real."
            },
            "express": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Con Express puedo crear servidores web robustos y flexibles de manera rápida. Me permite definir rutas, manejar peticiones y respuestas HTTP fácilmente, y organizar el backend de forma clara y modular.",
                "second_title": "¿Qué he construido con ",
                "second_content": "He usado Express en conjunto con Node.js para desarrollar APIs RESTful, gestionar sesiones de usuario, y estructurar proyectos medianos con múltiples módulos. Algunos ejemplos incluyen una aplicación para cosmetología, un sistema de planning poker en tiempo real, y un generador de enlaces personalizados.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Express me brinda una forma sencilla pero poderosa de crear servidores y estructurar el backend de una aplicación. Es minimalista, extensible y tiene una gran comunidad, lo que facilita el desarrollo y mantenimiento del código.",
                "description": "Express.js es un framework minimalista y flexible para Node.js que proporciona un conjunto robusto de características para el desarrollo de aplicaciones web y APIs. Facilita la gestión de rutas, middleware y la integración con bases de datos o servicios externos."
            },
            "angular": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Con Angular, puedo desarrollar aplicaciones web empresariales de gran escala con una arquitectura sólida y mantenible. Su sistema basado en módulos y componentes facilita la creación y organización de aplicaciones complejas.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con Angular he trabajado profesionalmente en aplicaciones corporativas internas. He añadido funcionalidades, dado mantenimiento y trabajado en aplicaciones como un sistema de planning poker y otras herramientas empresariales con procesos de facturación o launchers que dirigen a otras plataformas internas.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Angular ofrece una estructura robusta y herramientas integradas que facilitan el desarrollo de aplicaciones complejas. Su sistema de tipado con TypeScript, su CLI poderosa y sus buenas prácticas fomentan la escalabilidad y el mantenimiento.",
                "description": "Angular es un framework de desarrollo web basado en TypeScript creado por Google. Permite construir aplicaciones de una sola página (SPA) utilizando una arquitectura basada en componentes, servicios e inyección de dependencias. Es ideal para desarrollar soluciones empresariales gracias a su robustez y escalabilidad."
            },
            "html": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "HTML5 me permite crear estructuras web como encabezados, párrafos, listas, tablas, formularios y más para dar forma y estructura a tu contenido web.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Debido a que HTML5 es el lenguaje de marcado estándar en los navegadores, todas las aplicaciones de front-end que he construido han utilizado esta tecnología. La que destaca más es la aplicación de reseñas de películas y series.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Uso HTML5 porque es el estándar web actual para crear páginas web y aplicaciones web. Esto significa que es ampliamente compatible con la mayoría de los navegadores web modernos y es la opción más segura y confiable para crear contenido web.",
                "description": "HTML5 es el lenguaje que se usa para construir la estructura de las páginas web. Define cómo se ven los textos, imágenes y enlaces, además de permitir la inclusión de videos y audio. Es el esqueleto que sostiene todo en su lugar y le da forma a Internet"
            },
            "css": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "CSS es el lenguaje que utilizo para dar estilo y presentar mi página o aplicación web. Con CSS, controlo el diseño, estilo y apariencia de los elementos en mi sitio web, lo que me permite crear diseños atractivos, animaciones y efectos visuales.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Debido a que CSS3 es el lenguaje de estilos estándar en los navegadores, cada aplicación de front-end que he construido ha utilizado esta tecnología. La que destaca más es la aplicación de reseñas de películas y series.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Con CSS3 tengo un control total de la presentación en mi sitio web, independientemente de la plataforma o el navegador. Además, es fácil de mantener y actualizar.",
                "description": "CSS3 es el pintor de una página web. Se encarga de darle estilo y colores a todo, desde el tamaño y fuente de las letras hasta el diseño de las imágenes y la disposición de los elementos. Es como la paleta mágica que hace que las páginas luzcan bonitas y atractivas."
            },
            "sass": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "SASS (Syntactically Awesome Style Sheets) es un preprocesador de CSS que te permite escribir código CSS de manera más eficiente y rápida.",
                "second_title": "¿Qué he construido con ",
                "second_content": "SASS es la principal y favorita herramienta que utilizo para estilizar mis aplicaciones web. Llevo usando SASS durante 1 año, y desde ese momento he construido todas mis aplicaciones con esta tecnología.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Utilizo SASS en mi día a día porque, como preprocesador, me ayuda a ahorrar tiempo y reducir la repetición de código con variables, funciones y anidamiento de selectores. Además, un punto clave es su sistema de modularización y organización, que me permite mantener mi código organizado y fácil de entender, especialmente en proyectos grandes.",
                "description": "SASS es un asistente de estilización para CSS. Te permite escribir estilos de manera más organizada y reutilizable, con funciones y variables. Es un ayudante que agiliza el proceso de diseño en las páginas web.."
            },
            "nextjs": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "NextJS es el framework ideal para potenciar aplicaciones React. Permite renderizado en el servidor, generación de sitios estáticos, optimización del rendimiento y soporte para APIs, todo con una experiencia de desarrollo fluida.",
                "second_title": "¿Qué he construido con ",
                "second_content": "NextJS es la herramienta que más utilizo actualmente. Este portafolio, una aplicación de reseñas de películas y series, una galería de arte y un proyecto freelance del sector cripto están construidos con NextJS, aprovechando su capacidad para renderizar rápido, optimizar el rendimiento y mejorar el SEO.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Uso NextJS porque cubre las limitaciones de React en cuanto a SEO y rendimiento. Además, me permite trabajar de forma fullstack utilizando JavaScript y React también en el backend, lo que agiliza el desarrollo de aplicaciones modernas.",
                "description": "NextJS es un framework construido sobre React que mejora el rendimiento, facilita el enrutamiento y permite renderizar contenido desde el servidor. Es ideal para construir aplicaciones modernas con tiempos de carga rápidos y buen SEO."
            },
            "styledComponents": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Styled Components me permite definir estilos para mis componentes de React de una manera más intuitiva y dinámica, lo que facilita la lectura y el mantenimiento del código. También me permite crear temas personalizados y anidar estilos para crear estilos más complejos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Styled Components no es mi forma favorita de estilizar mis aplicaciones, pero aún así he construido aplicaciones pequeñas utilizando esta tecnología, como aplicaciones de clima, formularios, etc.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Styled Components es una forma rápida y declarativa de escribir estilos, que, aunque tiene algunas desventajas en comparación con otras herramientas, reduce considerablemente el tiempo de desarrollo.",
                "description": "Styled Components es una herramienta que permite escribir estilos directamente en tus componentes de React. Hace que el diseño sea más modular y fácil de mantener, al usar JavaScript para definir estilos."
            },
            "pug": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Esta herramienta te permite escribir código HTML de una manera elegante, concisa y legible. Con esta tecnología, tengo la capacidad de transformar código mantenible, reutilizable y legible de Pug a HTML estándar.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Al comienzo de mi etapa de aprendizaje, Pug era la herramienta que utilizaba para escribir código HTML. Esto me llevó a crear varios proyectos interesantes con esta tecnología, como una wiki de países, una página de aterrizaje espacial, un prototipo de comercio electrónico de zapatos, entre otros.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Pug me proporciona una sintaxis simplificada de HTML estándar. Además, la reutilización de código y la eficiencia al escribir son factores que me llevaron a utilizar esta herramienta como una de mis favoritas.",
                "description": "Pug es un lenguaje que simplifica la escritura de HTML. Te permite crear estructuras de página más limpias y concisas, usando menos código que HTML convencional."
            },
            "figma": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Figma es una herramienta de diseño, generalmente utilizada para crear interfaces de usuario. Con ella puedo crear interfaces atractivas, que aunque no sean las más sofisticadas porque no soy diseñador, cumplen su función en el proceso de desarrollo de un producto.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con Figma he diseñado varias de mis propias aplicaciones, como mi primer portafolio, un gestor de clientes y mi favorita: una agencia inmobiliaria. Todo desde cero.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Figma es una herramienta de diseño en la nube, que me permite crear cualquier interfaz de usuario desde mi propio navegador. Además, es una herramienta de diseño completa, es decir, es posible crear la identidad de un producto completamente con Figma. Por último, comento que es la herramienta de diseño más cómoda y fácil de usar que he utilizado.",
                "description": "Figma es una herramienta de diseño que ayuda a crear y colaborar en diseños de interfaces de usuario y prototipos. Facilita la creación de diseños atractivos y permite a los equipos trabajar juntos en tiempo real."
            },
            "mysql": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "MySQL es posiblemente el gestor de bases de datos más famoso del mundo. Con él, tengo la capacidad de modelar bases de datos desde cero, realizar consultas DDL y DML e incluso cambiar la lógica de la base de datos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Mi camino en el back-end no ha sido tan largo como en el front-end, pero aún así he creado y modelado algunas bases de datos, como un gestor para comprar y vender casas, un sistema de contactos y un gestor para una clínica veterinaria.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Utilizo este gestor de bases de datos porque, además de ser de código abierto y gratuito, su compatibilidad con casi todos los lenguajes de programación brinda libertad en el desarrollo. Asimismo, cabe mencionar que es una plataforma confiable debido a su gran comunidad y al tiempo que ha sido consolidado en el mercado.",
                "description": "MySQL es un sistema de gestión de bases de datos (DBMS) que almacena y organiza datos en sitios web. Se utiliza con PHP y otros lenguajes para gestionar la información de manera eficiente."
            },
            "php": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "PHP es el único lenguaje de programación backend con el que tengo suficientes habilidades para construir sistemas decentes. Utilizando esta tecnología, tengo la capacidad de gestionar bases de datos, lo que me permite crear sistemas CRUD (crear, eliminar, actualizar, eliminar).",
                "second_title": "¿Qué he construido con ",
                "second_content": "Mi camino en el backend no ha sido tan largo como en el frontend, pero aún así he creado algunos sistemas básicos, como un gestor para comprar y vender casas o un sistema de contactos.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "PHP es un lenguaje de programación de alto nivel. Esto significa que su curva de aprendizaje es baja en comparación con otros lenguajes de programación. Esta fue la razón principal por la que aprendí a utilizar PHP como lenguaje backend.",
                "description": "PHP es un lenguaje de programación utilizado para construir sitios web dinámicos. Puede generar contenido personalizado y trabajar con bases de datos para almacenar y recuperar información."
            },
            "firebase": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Firebase es una plataforma web y móvil que permite a los desarrolladores construir sistemas backend de manera rápida y sencilla. Con esta herramienta, tengo la capacidad de crear sistemas de sesión, gestionar usuarios, información y archivos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con la ayuda de Firebase, he creado lo que considero mi mejor proyecto personal: una aplicación de reseñas de películas y series. En ella, he aprendido mucho sobre Firebase, su funcionamiento, sus limitaciones y, sobre todo, lo que se puede lograr utilizando esta tecnología.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Es una plataforma gratuita que ofrece una amplia variedad de servicios y herramientas útiles para el desarrollo móvil o web. También es fácil de usar y aprender, con una curva de aprendizaje más rápida que un lenguaje de programación backend. Aunque, obviamente, esto viene con limitaciones.",
                "description": "Firebase es una plataforma en la nube que ayuda a desarrolladores a construir aplicaciones web y móviles. Proporciona herramientas para autenticación, almacenamiento de datos en tiempo real y más."
            },
            "typescript": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "TypeScript me permite desarrollar aplicaciones web robustas, escalables y mantenibles. Gracias a su tipado estático, detecto errores antes de ejecutar el código y puedo trabajar con mayor confianza en proyectos grandes.",
                "second_title": "¿Qué he construido con ",
                "second_content": "He utilizado TypeScript en aplicaciones construidas con frameworks como React, NextJS y Angular. Con él desarrollé dashboards administrativos, formularios complejos con validaciones, y funcionalidades compartidas entre frontend y backend.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Uso TypeScript porque mejora la calidad del código JavaScript, facilita el trabajo en equipo y ayuda a prevenir errores comunes. Su integración con editores y su compatibilidad con JavaScript lo hacen una herramienta poderosa para cualquier proyecto moderno.",
                "description": "TypeScript es un superset de JavaScript que añade tipado estático y otras características avanzadas. Permite escribir código más seguro, claro y mantenible, ideal para el desarrollo profesional de aplicaciones modernas."
            },
            "github": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "GitHub es una plataforma en línea que se utiliza principalmente para alojar y gestionar proyectos de software. Generalmente utilizo la plataforma para gestionar mis propios proyectos y a veces la utilizo como documentación para ciertos proyectos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con GitHub he gestionado cada uno de los proyectos que he subido a la web.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "GitHub y su ecosistema es la herramienta más utilizada en la web para gestionar código, y esto no es en vano. Esta tecnología tiene múltiples funciones y servicios que me permiten como desarrollador cambiar versiones en mis proyectos, gestionar quién puede cambiar el contenido de mis archivos, entre otras cosas.",
                "description": "GitHub es una plataforma para gestionar y compartir código de programación. Permite a los desarrolladores colaborar en proyectos, rastrear cambios y mantener un historial de versiones."
            },
            "git": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Git es otra herramienta para gestionar proyectos, sus versiones y sus cambios. Esta herramienta es esencial para el desarrollo y posterior mantenimiento de cualquier aplicación. Dicho esto, comento que lo uso todos los días para crear nuevos proyectos, editar los ya creados y a veces eliminarlos.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Con Git he gestionado cada uno de los proyectos que he subido a la web.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Git permite la colaboración en un proyecto entre múltiples desarrolladores. Esto es fundamental en el desarrollo de un producto. Además, su sistema de versiones me permite realizar un seguimiento de cualquier problema en cualquier momento.",
                "description": "Git es un sistema de control de versiones que rastrea y gestiona cambios en el código de programación. Facilita la colaboración, el seguimiento de historiales y la fusión de contribuciones en proyectos."
            },
            "npm": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "NPM es un administrador de paquetes que me permite gestionarlos fácilmente en mi proyecto. Es una herramienta fundamental en el desarrollo web moderno.",
                "second_title": "¿Qué he construido con ",
                "second_content": "Desde mis primeros días aprendiendo React, he utilizado NPM de una forma u otra. Esto significa que todos los proyectos construidos en React utilizan NPM.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "NPM es el administrador de paquetes estándar de Node.js para cualquier proyecto. Aunque existen alternativas, esta opción es la más estable, la que tiene más información y también la más utilizada.",
                "description": "Npm (Node Package Manager) es una herramienta que ayuda a los desarrolladores a gestionar las bibliotecas de software que su proyecto necesita. Permite instalar, actualizar y compartir componentes fácilmente."
            },
            "laravel": {
                "first_title": "¿Qué puedo hacer con ",
                "first_content": "Utilizo su arquitectura MVC (Modelo-Vista-Controlador) para desarrollar aplicaciones con una estructura organizada y mantenible. También puedo construir aplicaciones API REST, proporcionando endpoints para la comunicación con otras aplicaciones y servicios..",
                "second_title": "¿Qué he construido con ",
                "second_content": "Una de las aplicaciones más destacadas que he desarrollado con Laravel es una plataforma de notas. En esta aplicación, gestiono el registro y autenticación de usuarios, la base de datos (utilizando MySQL) con Eloquent como ORM, y aseguro las rutas mediante los middlewares que ofrece Laravel.",
                "third_title": "¿Por qué utilizo ",
                "third_content": "Su enfoque en la legibilidad del código y la automatización de tareas comunes me permite ser más productivo. Además, su comunidad activa y la abundancia de recursos significan que siempre hay soporte y nuevas oportunidades para aprender.",
                "description": "Laravel es un moderno framework de PHP. Destaca por su elegante sintaxis y su amplia gama de características que facilitan la creación de aplicaciones robustas y escalables. Ofrece una arquitectura MVC sólida, manejo sencillo de bases de datos, enrutamiento flexible y un sistema de autenticación completo."
            }
        }
    }
}